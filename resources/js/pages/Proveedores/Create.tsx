import { useAppMode } from '@/contexts/AppModeContext';
import DashboardLayout from '@/layouts/DashboardLayout';
import { Head, useForm } from '@inertiajs/react';
import { FormEventHandler } from 'react';
import { FormPage, FormSection, FormButtons } from '@/components/Form';

export default function ProveedorCreate() {
    const { settings } = useAppMode();

    const { data, setData, post, processing, errors } = useForm({
        nombre: '',
        telefono: '',
        email: '',
        direccion: '',
        tipo: '',
        razon_social: '',
        nit: '',
        representante_legal: '',
        apellido: '',
    });

    const getTextByMode = (textos: { ni√±os: string; j√≥venes: string; adultos: string }) => {
        return textos[settings.ageMode as keyof typeof textos] || textos.adultos;
    };

    const getModeClasses = () => {
        switch (settings.ageMode) {
            case 'ni√±os':
                return 'font-comic text-adaptive-kids';
            case 'j√≥venes':
                return 'font-modern text-adaptive-teen';
            default:
                return 'font-classic text-adaptive-adult';
        }
    };

    const submit: FormEventHandler = (e) => {
        e.preventDefault();
        post('/proveedores');
    };

    // Mostrar u ocultar campos seg√∫n el tipo de proveedor
    const isTipoEmpresa = data.tipo === 'empresa';
    const isTipoPersona = data.tipo === 'persona';

    return (
        <DashboardLayout
            title={getTextByMode({
                ni√±os: '‚ûï ¬°Crear Proveedor Nuevo!',
                j√≥venes: '‚ûï Crear Proveedor',
                adultos: 'Crear Nuevo Proveedor',
            })}
        >
            <Head title="Crear Proveedor" />

            <FormPage
                title={getTextByMode({
                    ni√±os: 'üéâ ¬°Crear Proveedor S√∫per Genial!',
                    j√≥venes: '‚ú® Crear Nuevo Proveedor',
                    adultos: 'Crear Nuevo Proveedor',
                })}
                description={getTextByMode({
                    ni√±os: '¬°Completa todos los campos para crear un proveedor incre√≠ble!',
                    j√≥venes: 'Completa la informaci√≥n para crear el nuevo proveedor',
                    adultos: 'Complete la informaci√≥n requerida para crear el nuevo proveedor',
                })}
                backHref="/proveedores"
                backText={getTextByMode({
                    ni√±os: '¬°Volver a la lista!',
                    j√≥venes: 'Volver a proveedores',
                    adultos: 'Volver a proveedores',
                })}
            >
                <form onSubmit={submit} className="space-y-6">
                    <div className="grid grid-cols-1 gap-6 lg:grid-cols-2">
                        <FormSection
                            title={getTextByMode({
                                ni√±os: 'üìù Informaci√≥n Principal',
                                j√≥venes: 'üìù Datos Principales',
                                adultos: 'Informaci√≥n Principal',
                            })}
                        >
                            <div className="space-y-4">
                                <div>
                                    <label htmlFor="tipo" className={`block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1 ${getModeClasses()}`}>
                                        {getTextByMode({
                                            ni√±os: 'üè∑Ô∏è ¬øQu√© tipo de proveedor es? *',
                                            j√≥venes: 'üè∑Ô∏è Tipo de proveedor *',
                                            adultos: 'Tipo de proveedor *'
                                        })}
                                    </label>
                                    <select
                                        id="tipo"
                                        value={data.tipo}
                                        onChange={(e) => setData('tipo', e.target.value)}
                                        className="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md focus:outline-none focus:ring-2 focus:ring-green-500 dark:bg-gray-700 dark:text-gray-100"
                                        required
                                    >
                                        <option value="">
                                            {getTextByMode({
                                                ni√±os: 'Selecciona un tipo...',
                                                j√≥venes: 'Selecciona el tipo',
                                                adultos: 'Seleccione un tipo'
                                            })}
                                        </option>
                                        <option value="empresa">
                                            {getTextByMode({
                                                ni√±os: 'üè¢ Empresa o Negocio',
                                                j√≥venes: 'üè¢ Empresa',
                                                adultos: 'Empresa'
                                            })}
                                        </option>
                                        <option value="persona">
                                            {getTextByMode({
                                                ni√±os: 'üë§ Persona',
                                                j√≥venes: 'üë§ Persona Natural',
                                                adultos: 'Persona Natural'
                                            })}
                                        </option>
                                    </select>
                                    {errors.tipo && (
                                        <p className="text-red-500 text-xs mt-1">{errors.tipo}</p>
                                    )}
                                </div>

                                <div>
                                    <label htmlFor="nombre" className={`block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1 ${getModeClasses()}`}>
                                        {getTextByMode({
                                            ni√±os: isTipoPersona ? 'üë§ Nombre *' : 'üè≠ Nombre de la empresa *',
                                            j√≥venes: isTipoPersona ? 'üë§ Nombre *' : 'üè≠ Nombre de la empresa *',
                                            adultos: isTipoPersona ? 'Nombre *' : 'Nombre de la empresa *'
                                        })}
                                    </label>
                                    <input
                                        id="nombre"
                                        type="text"
                                        value={data.nombre}
                                        onChange={(e) => setData('nombre', e.target.value)}
                                        className="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md focus:outline-none focus:ring-2 focus:ring-green-500 dark:bg-gray-700 dark:text-gray-100"
                                        required
                                    />
                                    {errors.nombre && (
                                        <p className="text-red-500 text-xs mt-1">{errors.nombre}</p>
                                    )}
                                </div>

                                {isTipoPersona && (
                                    <div>
                                        <label htmlFor="apellido" className={`block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1 ${getModeClasses()}`}>
                                            {getTextByMode({
                                                ni√±os: 'üë®‚Äçüë©‚Äçüëß‚Äçüë¶ Apellidos *',
                                                j√≥venes: 'üë®‚Äçüë©‚Äçüëß‚Äçüë¶ Apellidos *',
                                                adultos: 'Apellidos *'
                                            })}
                                        </label>
                                        <input
                                            id="apellido"
                                            type="text"
                                            value={data.apellido}
                                            onChange={(e) => setData('apellido', e.target.value)}
                                            className="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md focus:outline-none focus:ring-2 focus:ring-green-500 dark:bg-gray-700 dark:text-gray-100"
                                            required
                                        />
                                        {errors.apellido && (
                                            <p className="text-red-500 text-xs mt-1">{errors.apellido}</p>
                                        )}
                                    </div>
                                )}

                                <div>
                                    <label htmlFor="email" className={`block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1 ${getModeClasses()}`}>
                                        {getTextByMode({
                                            ni√±os: 'üìß Email',
                                            j√≥venes: 'üìß Correo electr√≥nico',
                                            adultos: 'Correo electr√≥nico'
                                        })}
                                    </label>
                                    <input
                                        id="email"
                                        type="email"
                                        value={data.email}
                                        onChange={(e) => setData('email', e.target.value)}
                                        className="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md focus:outline-none focus:ring-2 focus:ring-green-500 dark:bg-gray-700 dark:text-gray-100"
                                    />
                                    {errors.email && (
                                        <p className="text-red-500 text-xs mt-1">{errors.email}</p>
                                    )}
                                </div>

                                <div>
                                    <label htmlFor="telefono" className={`block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1 ${getModeClasses()}`}>
                                        {getTextByMode({
                                            ni√±os: 'üìû Tel√©fono',
                                            j√≥venes: 'üìû N√∫mero de tel√©fono',
                                            adultos: 'N√∫mero de tel√©fono'
                                        })}
                                    </label>
                                    <input
                                        id="telefono"
                                        type="tel"
                                        value={data.telefono}
                                        onChange={(e) => setData('telefono', e.target.value)}
                                        className="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md focus:outline-none focus:ring-2 focus:ring-green-500 dark:bg-gray-700 dark:text-gray-100"
                                    />
                                    {errors.telefono && (
                                        <p className="text-red-500 text-xs mt-1">{errors.telefono}</p>
                                    )}
                                </div>
                            </div>
                        </FormSection>

                        <FormSection
                            title={getTextByMode({
                                ni√±os: 'üîç Detalles Adicionales',
                                j√≥venes: 'üîç Informaci√≥n Complementaria',
                                adultos: 'Informaci√≥n Complementaria',
                            })}
                        >
                            <div className="space-y-4">
                                {isTipoEmpresa && (
                                    <>
                                        <div>
                                            <label htmlFor="razon_social" className={`block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1 ${getModeClasses()}`}>
                                                {getTextByMode({
                                                    ni√±os: 'üìù Raz√≥n Social',
                                                    j√≥venes: 'üìù Raz√≥n Social',
                                                    adultos: 'Raz√≥n Social'
                                                })}
                                            </label>
                                            <input
                                                id="razon_social"
                                                type="text"
                                                value={data.razon_social}
                                                onChange={(e) => setData('razon_social', e.target.value)}
                                                className="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md focus:outline-none focus:ring-2 focus:ring-green-500 dark:bg-gray-700 dark:text-gray-100"
                                            />
                                            {errors.razon_social && (
                                                <p className="text-red-500 text-xs mt-1">{errors.razon_social}</p>
                                            )}
                                        </div>

                                        <div>
                                            <label htmlFor="nit" className={`block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1 ${getModeClasses()}`}>
                                                {getTextByMode({
                                                    ni√±os: 'üî¢ NIT',
                                                    j√≥venes: 'üî¢ NIT',
                                                    adultos: 'NIT/Identificaci√≥n Fiscal'
                                                })}
                                            </label>
                                            <input
                                                id="nit"
                                                type="text"
                                                value={data.nit}
                                                onChange={(e) => setData('nit', e.target.value)}
                                                className="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md focus:outline-none focus:ring-2 focus:ring-green-500 dark:bg-gray-700 dark:text-gray-100"
                                            />
                                            {errors.nit && (
                                                <p className="text-red-500 text-xs mt-1">{errors.nit}</p>
                                            )}
                                        </div>

                                        <div>
                                            <label htmlFor="representante_legal" className={`block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1 ${getModeClasses()}`}>
                                                {getTextByMode({
                                                    ni√±os: 'üë®‚Äçüíº Representante Legal',
                                                    j√≥venes: 'üë®‚Äçüíº Representante Legal',
                                                    adultos: 'Representante Legal'
                                                })}
                                            </label>
                                            <input
                                                id="representante_legal"
                                                type="text"
                                                value={data.representante_legal}
                                                onChange={(e) => setData('representante_legal', e.target.value)}
                                                className="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md focus:outline-none focus:ring-2 focus:ring-green-500 dark:bg-gray-700 dark:text-gray-100"
                                            />
                                            {errors.representante_legal && (
                                                <p className="text-red-500 text-xs mt-1">{errors.representante_legal}</p>
                                            )}
                                        </div>
                                    </>
                                )}

                                <div>
                                    <label htmlFor="direccion" className={`block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1 ${getModeClasses()}`}>
                                        {getTextByMode({
                                            ni√±os: 'üìç Direcci√≥n',
                                            j√≥venes: 'üìç Direcci√≥n',
                                            adultos: 'Direcci√≥n completa'
                                        })}
                                    </label>
                                    <textarea
                                        id="direccion"
                                        value={data.direccion}
                                        onChange={(e) => setData('direccion', e.target.value)}
                                        rows={3}
                                        className="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md focus:outline-none focus:ring-2 focus:ring-green-500 dark:bg-gray-700 dark:text-gray-100"
                                        placeholder={getTextByMode({
                                            ni√±os: 'Escribe la direcci√≥n completa aqu√≠...',
                                            j√≥venes: 'Direcci√≥n completa...',
                                            adultos: 'Direcci√≥n completa'
                                        })}
                                    />
                                    {errors.direccion && (
                                        <p className="text-red-500 text-xs mt-1">{errors.direccion}</p>
                                    )}
                                </div>
                            </div>
                        </FormSection>
                    </div>

                    <FormButtons
                        isProcessing={processing}
                        submitLabel={getTextByMode({
                            ni√±os: 'üíæ ¬°Crear Proveedor!',
                            j√≥venes: 'üíæ Crear Proveedor',
                            adultos: 'Crear Proveedor',
                        })}
                        cancelHref="/proveedores"
                        cancelLabel={getTextByMode({
                            ni√±os: '‚ùå Cancelar',
                            j√≥venes: 'Cancelar',
                            adultos: 'Cancelar',
                        })}
                    />
                </form>
            </FormPage>
        </DashboardLayout>
    );
} 